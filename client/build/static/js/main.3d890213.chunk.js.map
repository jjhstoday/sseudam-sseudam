{"version":3,"sources":["styles/color.ts","styles/reset.ts","styles/font.ts","components/AddButton/styles.tsx","components/AddButton/index.tsx","components/Footer/styles.tsx","components/Footer/index.tsx","components/Header/styles.tsx","components/Header/index.tsx","graphql/book.tsx","queryClient.ts","components/Book/styles.tsx","components/Book/index.tsx","containers/BookListContainer/styles.tsx","components/MyCount/styles.tsx","components/MyCount/index.tsx","hooks/useInfiniteScroll.tsx","components/Message/styles.tsx","components/Message/index.tsx","containers/BookListContainer/index.tsx","pages/Home/index.tsx","containers/SentenceListContainer/styles.tsx","components/Sentence/styles.tsx","components/Sentence/index.tsx","graphql/sentence.tsx","components/CloseButton/styles.tsx","components/CloseButton/index.tsx","components/ConfirmButton/styles.tsx","components/ConfirmButton/index.tsx","components/DeleteConfirmModal/styles.tsx","components/DeleteConfirmModal/index.tsx","components/DeleteButton/styles.tsx","components/DeleteButton/index.tsx","components/UpdateButton/styles.tsx","components/UpdateButton/index.tsx","containers/ButtonsContainer/styles.tsx","containers/ButtonsContainer/index.tsx","containers/SentenceListContainer/index.tsx","pages/Book/index.tsx","api/bookApi.tsx","components/SearchedBook/styles.tsx","components/SearchedBook/index.tsx","components/SearchedBookList/styles.tsx","components/SearchedBookList/index.tsx","components/SearchInput/styles.tsx","components/SearchInput/index.tsx","containers/SearchingBookContainer/styles.tsx","containers/SearchingBookContainer/index.tsx","pages/PostingBook/index.tsx","components/SentenceTextarea/styles.tsx","components/SentenceTextarea/index.tsx","containers/CreateSentenceContainer/index.tsx","pages/PostingSentence/index.tsx","components/SentenceDetail/styles.tsx","components/SentenceDetail/index.tsx","containers/SentenceDetailContainer/index.tsx","pages/Sentence/index.tsx","containers/UpdateSentenceContainer/index.tsx","pages/EditSentence/index.tsx","app/App.tsx","index.tsx"],"names":["lightPalette","GlobalStyle","createGlobalStyle","normalize","fontSizeKit","PlusIcon","styled","GiFeather","IconContainer","div","props","$color","AddButton","moveToPage","id","color","to","pathname","state","FooterContainer","footer","Footer","Divider","HeaderContainer","header","Header","title","GET_BOOKS","gql","CREATE_BOOK","DELETE_BOOK","URL","fetcher","query","variables","request","Li","li","Book","book","trimTitle","replace","bookId","text","trim","trimedBookId","src","image","alt","Ul","ul","BookIcon","FaBook","HeartIcon","ImHeart","Span","span","MyCount","count","useInfiniteScroll","targetEl","observerRef","useRef","useState","intersecting","setIntersecting","getObserver","useCallback","current","IntersectionObserver","entries","some","entry","isIntersecting","useEffect","observe","disconnect","P","p","Message","BookListContainer","books","setBooks","fetchMoreEl","hasNext","setHasNext","booksLength","setBooksLength","getServerSideData","a","cursor","length","sBooks","old","getBooksLength","map","ref","Home","ClipIcon","GiPaperClip","Sentence","GET_SENTENCES","CREATE_SENTENCE","UPDATE_SENTENCE","DELETE_SENTENCE","CloseIcon","IoCloseOutline","Button","button","CloseButton","history","useHistory","location","useLocation","onClick","includes","push","goBack","ConfirmIcon","FiCheck","$readyToSubmit","ConfirmButton","onSubmit","readyToSubmit","Container","DeleteConfirmModal","onDeleteCancel","onDeleteConfirm","DeleteBookIcon","AiOutlineDelete","DeleteButton","isModal","UpdateIcon","HiOutlinePencilAlt","UpdateButton","onUpdate","ButtonsContainer","pageName","SentenceListContainer","stcs","setStcs","setIsModal","sStcs","sentences","getStcsLength","stc","window","scrollTo","getSearchBook","axios","get","params","res","data","items","console","error","OffRadioIcon","IoMdRadioButtonOff","OnRadioIcon","IoMdRadioButtonOn","SearchedBook","author","isChecked","SearchedBookList","searchedBook","isFail","DeleteIcon","IoCloseCircle","$text","SearchInput","onKeyPress","setText","inputEl","type","placeholder","value","onChange","e","target","autoFocus","focus","trimedText","newText","copyTitle","split","isText","isLparen","i","SearchingBookContainer","setSearchedBook","setIsFail","selectedBook","setSelectedBook","element","currentTarget","key","newRes","isbn","getSelectedBook","newSelectedBook","newData","filter","PostingBook","Textarea","textarea","SentenceTextarea","CreateSentenceContainer","PostingSentence","SentenceDetail","SentenceDetailContainer","UpdateSentenceContainer","setNewText","EditSentence","App","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"+LAAaA,EACG,UADHA,EAEK,UAFLA,EAGO,UAHPA,EAIS,UCITC,EAGTC,YAAH,m4GAECC,cAmHcH,EAQLA,EAgCAA,GCxKEI,EACJ,SADIA,EAEH,SCKGC,EAAWC,YAAOC,IAAPD,CAAH,0BACRE,EAAgBF,IAAOG,IAAV,gUAKE,SAAAC,GAAK,OAAIA,EAAMC,UAC3B,SAAAD,GAAK,OAAIA,EAAMC,SAO3BN,EAGSL,G,OCOEY,EAtBc,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,WAA0B,IAAdC,UAAc,MAAT,GAAS,EAClDC,EACW,iBAAfF,EACIb,EACAA,EAEN,OACE,cAAC,IAAD,CACEgB,GAAI,CACFC,SAAUJ,EACVK,MAAO,CACLJ,OAJN,SAQE,cAACN,EAAD,CAAeG,OAAQI,EAAvB,SACE,cAACV,EAAD,SCtBKc,EAAkBb,IAAOc,OAAV,yLAOfpB,GCPE,SAASqB,IACtB,OACE,cAACF,EAAD,UACE,kFCHwBb,IAAOG,IAAV,0BAApB,I,sBACMa,EAAUhB,IAAOG,IAAV,0BACPc,EAAkBjB,IAAOkB,OAAV,8mBAKZxB,EAoBZsB,EAIItB,EACAA,EACAA,GCpBOyB,EATW,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAC3B,OACE,eAACH,EAAD,WACE,6BAAKG,IACL,cAACJ,EAAD,Q,+CCTOK,EAAYC,YAAH,gOAgCTC,GAhBWD,YAAH,mNAgBMA,YAAH,+SAgBXE,GAAcF,YAAH,8F,SChDlBG,GAEA,+BAGOC,GAAU,SAACC,GAAD,IAAsBC,EAAtB,uDAAkC,GAAlC,OACrBC,mBAAQJ,GAAKE,EAAOC,ICNTE,GAAK9B,IAAO+B,GAAV,kkBCqCAC,GA1Ba,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACvBC,EAAY,SAACd,GAEjB,OADoBA,EAAMe,QAAQ,OAAQ,KAI5C,OACE,cAACL,GAAD,UACE,cAAC,IAAD,CACEpB,GAAI,CACFC,SAAS,SAAD,OAAWuB,EAAUD,EAAKb,QAClCR,MAAO,CACLJ,GAAI,GACJ4B,OAAQH,EAAKzB,GACb6B,KAAM,GACNjB,MAAOa,EAAKb,MAAMkB,OAClBC,aAAcL,EAAUD,EAAKb,SARnC,SAYE,qBAAKoB,IAAKP,EAAKQ,MAAOC,IAAKT,EAAKb,aC/B3BuB,GAAK3C,IAAO4C,GAAV,sK,kBCGFC,GAAW7C,YAAO8C,KAAP9C,CAAH,0BACR+C,GAAY/C,YAAOgD,KAAPhD,CAAH,0BACTiD,GAAOjD,IAAOkD,KAAV,gRACFpD,EACJJ,EASPmD,GAAaE,GACJrD,GCFEyD,GATY,SAAC,GAA0B,IAAD,IAAvBC,aAAuB,MAAf,EAAe,EAAZhC,EAAY,EAAZA,MACvC,OACE,eAAC6B,GAAD,WACa,8BAAV7B,EAAoB,cAACyB,GAAD,IAAe,cAACE,GAAD,IACnC3B,EAFH,KAEgBgC,EAFhB,QCwBWC,GA1BW,SACxBC,GAEA,IAAMC,EAAcC,iBAAoC,MACxD,EAAwCC,oBAAS,GAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KAEMC,EAAcC,uBAAY,WAM9B,OALKN,EAAYO,UACfP,EAAYO,QAAU,IAAIC,sBAAqB,SAAAC,GAC7CL,EAAgBK,EAAQC,MAAK,SAAAC,GAAK,OAAIA,EAAMC,uBAGzCZ,EAAYO,UAClB,CAACP,EAAYO,UAUhB,OARAM,qBAAU,WAGR,OAFId,EAASQ,SAASF,IAAcS,QAAQf,EAASQ,SAE9C,WACLF,IAAcU,gBAEf,CAAChB,EAASQ,UAENJ,GC5BIa,GAAIvE,IAAOwE,EAAV,gMACC1E,EACJJ,GCKI+E,GAJY,SAAC,GAAc,IAAZpC,EAAW,EAAXA,KAC5B,OAAO,cAACkC,GAAD,UAAIlC,KCSE,SAASqC,KACtB,MAA0BjB,mBAAkB,IAA5C,mBAAOkB,EAAP,KAAcC,EAAd,KACMC,EAAcrB,iBAA8B,MAC5CE,EAAeL,GAAkBwB,GACvC,EAA8BpB,oBAAS,GAAvC,mBAAOqB,EAAP,KAAgBC,EAAhB,KACA,EAAsCtB,mBAAS,GAA/C,mBAAOuB,EAAP,KAAoBC,EAApB,KAEMC,EAAiB,uCAAG,gCAAAC,EAAA,sEACQzD,GAAQL,EAAW,CACjD+D,OAAM,UAAET,EAAMA,EAAMU,OAAS,UAAvB,aAAE,EAAyB7E,KAFX,mBAIF,KAHP8E,EADS,EAChBX,OAGGU,OAJa,uBAKtBN,GAAW,GALW,0BAQxBH,GAAS,SAAAW,GAAG,4BAAQA,GAAR,YAAgBD,OARJ,2CAAH,qDAWvBlB,qBAAU,WACJV,GAAgBoB,GAASI,MAC5B,CAACxB,EAAcoB,IAElB,IAAMU,EAAc,uCAAG,8BAAAL,EAAA,sEACWzD,GAAQL,EAAW,CAAE+D,OAAQ,QADxC,gBACNE,EADM,EACbX,MACRM,EAAeK,EAAOD,QAFD,2CAAH,qDASpB,OAJAjB,qBAAU,WACRoB,MACC,IAGD,qCACE,cAAC,GAAD,CAASpC,MAAO4B,EAAa5D,MAAM,8BAClCuD,EAAMU,OAAS,EACd,cAAC1C,GAAD,UACGgC,EAAMc,KAAI,SAAAxD,GAAI,OACb,cAAC,GAAD,CAAoBA,KAAMA,GAAfA,EAAKzB,SAIpB,cAAC,GAAD,CAAS6B,KAAK,iFAEhB,qBAAKqD,IAAKb,OCrDD,SAASc,KACtB,OACE,qCACE,cAAC,EAAD,CAAQvE,MAAM,6BACd,kCACE,cAACsD,GAAD,MAEF,cAAC,EAAD,CAAWnE,WAAW,iBACtB,cAACQ,EAAD,OCZC,I,2BAAM4B,GAAK3C,IAAO4C,GAAV,iGCEFgD,GAAW5F,YAAO6F,IAAP7F,CAAH,4BACR8B,GAAK9B,IAAO+B,GAAV,8rBACOrC,EAMLI,EACJJ,EAoBTkG,GAOSlG,GCXEoG,GAlBa,SAAC,GAA+C,IAA7CzD,EAA4C,EAA5CA,KAAM7B,EAAsC,EAAtCA,GAAI4B,EAAkC,EAAlCA,OAAQG,EAA0B,EAA1BA,aAAcnB,EAAY,EAAZA,MAC7D,OACE,cAAC,GAAD,UACE,eAAC,IAAD,CACEV,GAAI,CACFC,SAAS,SAAD,OAAW4B,EAAX,qBAAoC/B,GAC5CI,MAAO,CAAEyB,OAAM7B,KAAI4B,SAAQhB,QAAOmB,iBAHtC,UAME,cAACqD,GAAD,IACA,8BACE,4BAAIvD,YCpBD0D,GAAgBzE,YAAH,qLAoBb0E,IAVe1E,YAAH,yIAUMA,YAAH,+LAUf2E,GAAkB3E,YAAH,kLAUf4E,GAAkB5E,YAAH,wG,SCtCf6E,GAAYnG,YAAOoG,KAAPpG,CAAH,4BACTqG,GAASrG,IAAOsG,OAAV,mQAWfH,GAGSzG,GCXE,SAAS6G,KACtB,IAAMC,EAAUC,cACVC,EAAWC,cACThG,EAAoB+F,EAApB/F,SAAUC,EAAU8F,EAAV9F,MAelB,OACE,cAACyF,GAAD,CAAQO,QAdM,YAEZjG,EAASkG,SAAS,SACjBlG,EAASkG,SAAS,oBAClBlG,EAASkG,SAAS,aAClBlG,EAASkG,SAAS,gBAGVlG,EAASkG,SAAS,YAC3BL,EAAQM,KAAK,CAAEnG,SAAS,SAAD,OAAWC,EAAM2B,cAAgB3B,UACrD4F,EAAQO,SAHXP,EAAQM,KAAK,MAOf,SACE,cAACX,GAAD,M,0DCrBOa,GAAchH,YAAOiH,KAAPjH,CAAH,4BACXqG,GAASrG,IAAOsG,OAAV,oRASP,SAAAlG,GAAK,OAAKA,EAAM8G,eAAiB,UAAY,iBAErDF,GAGStH,GACE,SAAAU,GAAK,OAAKA,EAAM8G,eAAiB,IAAM,SCRvCC,GARkB,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,SAAUC,EAAoB,EAApBA,cAC5C,OACE,cAAC,GAAD,CAAQT,QAASQ,EAAUF,eAAgBG,EAA3C,SACE,cAACL,GAAD,OCPOM,GAAYtH,IAAOG,IAAV,qnCAWJT,EAYCI,E3BhBX,M2BmBOJ,EAIII,EAeEA,EAEOJ,EAEXA,GCxBF6H,GAnBuB,SAAC,GAIhC,IAHLC,EAGI,EAHJA,eACAC,EAEI,EAFJA,gBACAjH,EACI,EADJA,GAEA,OACE,cAAC8G,GAAD,UACE,gCACE,+FACA,sHACA,gCACE,wBAAQV,QAASY,EAAjB,0BACA,wBAAQZ,QAAS,kBAAMa,EAAgBjH,IAAvC,mC,SCjBGkH,GAAiB1H,YAAO2H,KAAP3H,CAAH,4BACdqG,GAASrG,IAAOsG,OAAV,oQAWfoB,GAGShI,GCgBEkI,GAvBiB,SAAC,GAM1B,IALLpH,EAKI,EALJA,GACAoG,EAII,EAJJA,QAII,IAHJiB,eAGI,aAFJL,sBAEI,MAFa,aAEb,MADJC,uBACI,MADc,aACd,EACJ,OACE,qCACE,cAAC,GAAD,CAAQb,QAAS,kBAAMA,EAAQpG,IAA/B,SACE,cAACkH,GAAD,MAEDG,GACC,cAAC,GAAD,CACEL,eAAgBA,EAChBC,gBAAiBA,EACjBjH,GAAIA,Q,SCxBDsH,GAAa9H,YAAO+H,KAAP/H,CAAH,4BACVqG,GAASrG,IAAOsG,OAAV,qQAWfwB,GAGSpI,GCFEsI,GARiB,SAAC,GAA0C,IAAxCxH,EAAuC,EAAvCA,GAAI6B,EAAmC,EAAnCA,KAAME,EAA6B,EAA7BA,aAAc0F,EAAe,EAAfA,SACzD,OACE,cAAC,GAAD,CAAQrB,QAAS,kBAAMqB,EAASzH,EAAI6B,EAAME,IAA1C,SACE,cAACuF,GAAD,OCVOR,GAAYtH,IAAOG,IAAV,gKC8DP+H,GA3CqB,SAAC,GAY9B,IAXLC,EAWI,EAXJA,SAWI,IAVJ3H,UAUI,MAVC,GAUD,MATJoG,eASI,MATM,aASN,MARJS,qBAQI,aAPJhF,YAOI,MAPG,GAOH,MANJE,oBAMI,MANW,GAMX,MALJ0F,gBAKI,MALO,aAKP,MAJJb,gBAII,MAJO,aAIP,MAHJS,eAGI,aAFJL,sBAEI,MAFa,aAEb,MADJC,uBACI,MADc,aACd,EACJ,OACE,eAAC,GAAD,WACE,cAAClB,GAAD,IACc,kBAAb4B,GACC,cAAC,GAAD,CAAef,SAAUA,EAAUC,cAAeA,IAEtC,iBAAbc,GACC,cAAC,GAAD,CACE3H,GAAIA,EACJoG,QAASA,EACTiB,QAASA,EACTL,eAAgBA,EAChBC,gBAAiBA,IAGP,iBAAbU,GACC,qCACE,cAAC,GAAD,CACE3H,GAAIA,EACJ6B,KAAMA,EACNE,aAAcA,EACd0F,SAAUA,IAEZ,cAAC,GAAD,CAAczH,GAAIA,EAAIoG,QAASA,WCiD1BwB,GAlF0B,SAAC,GAAqC,IAAnChG,EAAkC,EAAlCA,OAAQG,EAA0B,EAA1BA,aAAcnB,EAAY,EAAZA,MAC1DoF,EAAUC,cAChB,EAAwBhD,mBAAsB,IAA9C,mBAAO4E,EAAP,KAAaC,EAAb,KACMzD,EAAcrB,iBAA8B,MAC5CE,EAAeL,GAAkBwB,GACvC,EAA8BpB,oBAAS,GAAvC,mBAAOqB,EAAP,KAAgBC,EAAhB,KACA,EAAsCtB,mBAAS,GAA/C,mBAAOuB,EAAP,KAAoBC,EAApB,KACA,EAA8BxB,oBAAS,GAAvC,mBAAOoE,EAAP,KAAgBU,EAAhB,KAEMrD,EAAiB,uCAAG,gCAAAC,EAAA,sEACWzD,GAAQqE,GAAe,CACxD3D,SACAgD,OAAM,UAAEiD,EAAKA,EAAKhD,OAAS,UAArB,aAAE,EAAuB7E,KAHT,mBAKH,KAJFgI,EADK,EAChBC,WAIEpD,OALc,uBAMtBN,GAAW,GANW,0BASxBuD,GAAQ,SAAA/C,GAAG,4BAAQA,GAAR,YAAgBiD,OATH,2CAAH,qDAYvBpE,qBAAU,WACJV,GAAgBoB,GAASI,MAC5B,CAACxB,EAAcoB,IAElB,IAAM4D,EAAa,uCAAG,8BAAAvD,EAAA,sEACezD,GAAQqE,GAAe,CACxD3D,SACAgD,OAAQ,QAHU,gBACDoD,EADC,EACZC,UAIRxD,EAAeuD,EAAMnD,QALD,2CAAH,qDAQnBjB,qBAAU,WACRsE,MACC,IAEH,IAAM9B,EAAO,uCAAG,WAAOxE,GAAP,SAAA+C,EAAA,sDACdoD,GAAW,GADG,2CAAH,sDAQPd,EAAe,uCAAG,WAAOrF,GAAP,SAAA+C,EAAA,sEAChBzD,GAAQF,GAAa,CAAEhB,GAAI4B,IADX,OAEtBoE,EAAQM,KAAK,KAFS,2CAAH,sDAKrB,OACE,qCACE,cAAC,GAAD,CACEqB,SAAS,eACT3H,GAAI4B,EACJwE,QAASA,EACTiB,QAASA,EACTL,eAhBiB,WACrBe,GAAW,IAgBPd,gBAAiBA,IAEnB,cAAC,GAAD,CAASrE,MAAO4B,EAAa5D,MAAM,8BAClCiH,EAAKhD,OAAS,EACb,cAAC,GAAD,UACGgD,EAAK5C,KAAI,SAAAkD,GAAG,OACX,cAAC,GAAD,CAEEtG,KAAMsG,EAAItG,KACV7B,GAAImI,EAAInI,GACR4B,OAAQA,EACRG,aAAcA,EACdnB,MAAOA,GALFuH,EAAInI,SAUf,cAAC,GAAD,CAAS6B,KAAK,uFAEhB,qBAAKqD,IAAKb,QClED7C,GA3BF,WACX,IAAQpB,EAAU+F,cAAV/F,MACAwB,EAAgCxB,EAAhCwB,OAAQhB,EAAwBR,EAAxBQ,MAAOmB,EAAiB3B,EAAjB2B,aAMvB,OAJA6B,qBAAU,WACRwE,OAAOC,SAAS,EAAG,KAClB,IAGD,qCACE,cAAC,EAAD,CAAQzH,MAAOA,IACf,kCACE,cAAC,GAAD,CACEgB,OAAQA,EACRG,aAAcA,EACdnB,MAAOA,MAGX,cAAC,EAAD,CACEb,WAAU,gBAAWgC,EAAX,oBACV/B,GAAI4B,IAEN,cAACrB,EAAD,Q,6BCvBO+H,GAAa,uCAAG,WAAO1H,GAAP,eAAA+D,EAAA,+EAEP4D,KAAMC,IALtB,wBAK+B,CAC/BC,OAAQ7H,IAHe,cAEnB8H,EAFmB,yBAKlBA,EAAIC,KAAKC,OALS,gCAOzBC,QAAQC,MAAR,MAPyB,yDAAH,sD,SCHbC,GAAevJ,YAAOwJ,KAAPxJ,CAAH,qIAGdN,GAKE+J,GAAczJ,YAAO0J,KAAP1J,CAAH,qIAGbN,GCqBIiK,GAxBiB,SAAC,GAO1B,IANLnJ,EAMI,EANJA,GACAY,EAKI,EALJA,MACAwI,EAII,EAJJA,OACAnH,EAGI,EAHJA,MACAoH,EAEI,EAFJA,UACAjD,EACI,EADJA,QAEA,OAAKpG,GAAOY,GAAUwI,GAAWnH,EAG/B,qBAAajC,GAAIA,EAAIoG,QAAS,kBAAMA,EAAQpG,IAA5C,UACE,qBAAKgC,IAAKC,EAAOC,IAAKtB,IACtB,gCACE,uDACA,4BAAIA,IACJ,sDACA,4BAAIwI,OAELC,EAAY,cAACJ,GAAD,IAAkB,cAACF,GAAD,MARxB/I,GAHoC,MCjBpCmC,GAAK3C,IAAO4C,GAAV,m8BA+BM9C,EAQAA,GCNNgK,GAnBqB,SAAC,GAAuC,IAArCC,EAAoC,EAApCA,aAAcnD,EAAsB,EAAtBA,QACnD,OADyE,EAAboD,OACzC,cAAC,GAAD,CAAS3H,KAAK,yFAE/B,cAAC,GAAD,UACG0H,EAAatE,KAAI,gBAAGjF,EAAH,EAAGA,GAAIY,EAAP,EAAOA,MAAOwI,EAAd,EAAcA,OAAQnH,EAAtB,EAAsBA,MAAOoH,EAA7B,EAA6BA,UAA7B,OAChB,cAAC,GAAD,CAEErJ,GAAIA,EACJY,MAAOA,EACPwI,OAAQA,EACRnH,MAAOA,EACPoH,UAAWA,EACXjD,QAASA,GANJpG,SCfFyJ,GAAajK,YAAOkK,KAAPlK,CAAH,4BACVsH,GAAYtH,IAAOG,IAAV,yhBAQLL,EAObmK,GAGSvK,GAKE,SAAAU,GAAK,OAAKA,EAAM+J,MAAQ,EAAI,MAAQ,OCYpCC,GA/BgB,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WAChC,EAAwB5G,mBAAS,IAAjC,mBAAOpB,EAAP,KAAaiI,EAAb,KACMC,EAAU/G,iBAAyB,MAazC,OACE,eAAC,GAAD,CAAW2G,MAAO9H,EAAKgD,OAAvB,UACE,uBACEmF,KAAK,SACLC,YAAY,4DACZC,MAAOrI,EACPsI,SAjBiD,SAAAC,GACrDN,EAAQM,EAAEC,OAAOH,QAiBbL,WAAYA,EACZ3E,IAAK6E,EACLO,WAAS,IAEX,cAACb,GAAD,CAAYrD,QAlBA,WACd0D,EAAQ,IACJC,EAAQzG,SACVyG,EAAQzG,QAAQiH,eCtBTzD,GAAYtH,IAAOG,IAAV,8ECyBhB6K,GAAa,SAAC3I,GAMlB,IALA,IAAI4I,EAAU,GACVC,EAAY7I,EAAK8I,MAAM,IACvBC,GAAS,EACTC,GAAW,EAENC,EAAI,EAAGA,EAAIJ,EAAU7F,OAAQiG,IACf,MAAjBJ,EAAUI,KAAYF,GAAS,GACd,MAAjBF,EAAUI,KAAYD,GAAW,GACjCD,IAAWC,IAAUJ,GAAWC,EAAUI,IACzB,MAAjBJ,EAAUI,KAAYF,GAAS,GACd,MAAjBF,EAAUI,KAAYD,GAAW,GAEvC,OAAOJ,GAGM,SAASM,KACtB,MAAwC9H,mBAAS,CAC/C,CAAEjD,GAAI,GAAIY,MAAO,GAAIwI,OAAQ,GAAInH,MAAO,GAAIoH,WAAW,KADzD,mBAAOE,EAAP,KAAqByB,EAArB,KAGA,EAA4B/H,oBAAS,GAArC,mBAAOuG,EAAP,KAAeyB,EAAf,KACA,EAAwChI,mBAAS,CAC/CjD,GAAI,GACJY,MAAO,GACPwI,OAAQ,GACRnH,MAAO,KAJT,mBAAOiJ,EAAP,KAAqBC,EAArB,KAMMnF,EAAUC,cAEV4D,EAAkD,uCAAG,WAAMO,GAAN,qBAAAzF,EAAA,yDACnDyG,EAAUhB,EAAEiB,cACZnB,EAAQkB,EAAQlB,MAER,UAAVE,EAAEkB,KAAoBpB,EAAMpI,OAJyB,yCAIV,MAJU,uBAKvCwG,GAAc4B,GALyB,OAKnDxB,EALmD,OAMnD6C,EAAS7C,EAAIzD,KAAI,SAACyD,GACtB,MAAO,CACL1I,GAAI0I,EAAI8C,KACR5K,MAAO4J,GAAW9B,EAAI9H,OACtBwI,OAAQoB,GAAW9B,EAAIU,QACvBnH,MAAOyG,EAAIzG,MACXoH,WAAW,MAGf2B,EAAgBO,GAChBA,EAAO1G,OAASoG,GAAU,GAASA,GAAU,GAhBY,4CAAH,sDA+BlDQ,EAAkB,SACtBC,GAOA,MAAqCA,EAAgB,GAA7C1L,EAAR,EAAQA,GAAIY,EAAZ,EAAYA,MAAOwI,EAAnB,EAAmBA,OAAQnH,EAA3B,EAA2BA,MACvBiJ,EAAalL,KAAOA,EACtBmL,EAAgB,CAAEnL,GAAI,GAAIY,MAAO,GAAIwI,OAAQ,GAAInH,MAAO,KACrDkJ,EAAgB,CAAEnL,KAAIY,QAAOwI,SAAQnH,WAGtC2E,EAA8C,uCAAG,gCAAAjC,EAAA,yDAChDuG,EAAalL,GADmC,yCACxB,MADwB,cAE7CY,EAAyBsK,EAAzBtK,MAAOwI,EAAkB8B,EAAlB9B,OAAQnH,EAAUiJ,EAAVjJ,MAF8B,SAG/Cf,GAAQH,EAAa,CAAEH,QAAOwI,SAAQnH,UAHS,OAIrD+D,EAAQM,KAAK,KAJwC,2CAAH,qDAOpD,OACE,qCACE,cAAC,GAAD,CACEqB,SAAS,gBACTf,SAAUA,EACVC,gBAAiBqE,EAAalL,KAEhC,eAAC,GAAD,WACE,cAAC,GAAD,CAAa6J,WAAYA,IACzB,cAAC,GAAD,CACEN,aAAcA,EACdnD,QA5CQ,SAACpG,GACf,IAAM2L,EAAUpC,EAAatE,KAAI,SAAAF,GAAG,OAClCA,EAAI/E,KAAOA,EAAX,6BACS+E,GADT,IACcsE,WAAYtE,EAAIsE,YAD9B,6BAEStE,GAFT,IAEcsE,WAAW,OAE3B2B,EAAgBW,GAEhB,IAAMD,EAAkBC,EAAQC,QAAO,SAAAnK,GAAI,OAAIA,EAAKzB,KAAOA,KAC3DyL,EAAgBC,IAoCVlC,OAAQA,UCnHH,SAASqC,KAKtB,OAJAjI,qBAAU,WACRwE,OAAOC,SAAS,EAAG,KAClB,IAGD,qCACE,cAAC,EAAD,CAAQzH,MAAM,wBACd,kCACE,cAACmK,GAAD,MAEF,cAACxK,EAAD,OCbC,I,GAAMuL,GAAWtM,IAAOuM,SAAV,gTAQNzM,GCAA0M,GAJqB,SAAC,GAAwB,IAAtBnK,EAAqB,EAArBA,KAAMsI,EAAe,EAAfA,SAC3C,OAAO,cAAC2B,GAAD,CAAUxB,WAAS,EAACJ,MAAOrI,EAAMsI,SAAUA,KC4BrC8B,GA1B4B,SAAC,GAAY,IAAVjM,EAAS,EAATA,GAC5C,EAAwBiD,mBAAS,IAAjC,mBAAOpB,EAAP,KAAaiI,EAAb,KACM9D,EAAUC,cAEVW,EAAQ,uCAAG,4BAAAjC,EAAA,yDACV9C,EAAKC,OADK,yCACU,MADV,cAET0I,EAAa3I,EAAKC,OAFT,SAGTZ,GAAQsE,GAAiB,CAAE3D,KAAM2I,EAAY5I,OAAQ5B,IAH5C,OAIfgG,EAAQO,SAJO,2CAAH,qDAUd,OACE,qCACE,cAAC,GAAD,CACEoB,SAAS,gBACTf,SAAUA,EACVC,gBAAiBhF,EAAKC,SAExB,cAAC,GAAD,CAAkBD,KAAMA,EAAMsI,SAVwB,SAAAC,GACxDN,EAAQM,EAAEC,OAAOH,cCfN,SAASgC,KACtB,IACMlM,EADYmG,cAAV/F,MACSJ,GAMjB,OAJA4D,qBAAU,WACRwE,OAAOC,SAAS,EAAG,KAClB,IAGD,qCACE,cAAC,EAAD,CAAQzH,MAAM,qCACd,kCACE,cAAC,GAAD,CAAyBZ,GAAIA,MAE/B,cAACO,EAAD,OClBC,IAAMuG,GAAYtH,IAAOG,IAAV,kZASLL,EAGJJ,EAIII,GCHF6M,GATmB,SAAC,GAAqB,IAAnBvL,EAAkB,EAAlBA,MAAOiB,EAAW,EAAXA,KAC1C,OACE,eAAC,GAAD,WACE,4BAAIA,IACJ,sCAASjB,EAAT,YCuDSwL,GAnD4B,SAAC,GAMrC,IALLpM,EAKI,EALJA,GACA4B,EAII,EAJJA,OACAC,EAGI,EAHJA,KACAjB,EAEI,EAFJA,MACAmB,EACI,EADJA,aAEMiE,EAAUC,cAEVG,EAAO,uCAAG,WAAOpG,GAAP,SAAA2E,EAAA,sEACRzD,GAAQwE,GAAiB,CAAE1F,OADnB,OAEdgG,EAAQM,KAAK,CACXnG,SAAS,SAAD,OAAW4B,GACnB3B,MAAO,CACLJ,KACA4B,SACAC,OACAjB,QACAmB,kBATU,2CAAH,sDAcP0F,EAAQ,uCAAG,WAAOzH,EAAY6B,EAAcE,GAAjC,SAAA4C,EAAA,sDACfqB,EAAQM,KAAK,CACXnG,SAAS,SAAD,OAAW4B,EAAX,iBACR3B,MAAO,CACLJ,KACA4B,SACAC,OACAjB,QACAmB,kBARW,2CAAH,0DAad,OACE,qCACE,cAAC,GAAD,CACE4F,SAAS,eACT3H,GAAIA,EACJ6B,KAAMA,EACNE,aAAcA,EACd0F,SAAUA,EACVrB,QAASA,IAEX,cAAC,GAAD,CAAgBxF,MAAOA,EAAOiB,KAAMA,QClD3B,SAASyD,KACtB,IAAQlF,EAAU+F,cAAV/F,MACAJ,EAA0CI,EAA1CJ,GAAI4B,EAAsCxB,EAAtCwB,OAAQC,EAA8BzB,EAA9ByB,KAAMjB,EAAwBR,EAAxBQ,MAAOmB,EAAiB3B,EAAjB2B,aAEjC,OACE,cAAC,GAAD,CACE/B,GAAIA,EACJ4B,OAAQA,EACRC,KAAMA,EACNjB,MAAOA,EACPmB,aAAcA,ICPL,SAASsK,KACtB,MAA8BpJ,mBAAS,IAAvC,mBAAOwH,EAAP,KAAgB6B,EAAhB,KACQlM,EAAU+F,cAAV/F,MACAJ,EAA0CI,EAA1CJ,GAAI4B,EAAsCxB,EAAtCwB,OAAQC,EAA8BzB,EAA9ByB,KAAMjB,EAAwBR,EAAxBQ,MAAOmB,EAAiB3B,EAAjB2B,aAC3BiE,EAAUC,cAEVW,EAAQ,uCAAG,sBAAAjC,EAAA,yDACV8F,EAAQ3I,OAAO+C,OADL,yCACoB,MADpB,uBAET3D,GAAQuE,GAAiB,CAAEzF,KAAI6B,KAAM4I,IAF5B,OAGfzE,EAAQM,KAAK,CACXnG,SAAS,SAAD,OAAW4B,EAAX,qBAAoC/B,GAC5CI,MAAO,CAAEJ,KAAI4B,SAAQC,KAAM4I,EAAS7J,QAAOmB,kBAL9B,2CAAH,qDASd6B,qBAAU,WACR0I,EAAWzK,KACV,IAMH,OACE,qCACE,cAAC,GAAD,CACE8F,SAAS,gBACTf,SAAUA,EACVC,gBAAiB4D,EAAQ3I,OAAO+C,SAGlC,cAAC,GAAD,CAAkBhD,KAAM4I,EAASN,SAZqB,SAAAC,GACxDkC,EAAWlC,EAAEC,OAAOH,aC7BT,SAASqC,KAKtB,OAJA3I,qBAAU,WACRwE,OAAOC,SAAS,EAAG,KAClB,IAGD,qCACE,cAAC,EAAD,CAAQzH,MAAM,qCACd,kCACE,cAACyL,GAAD,MAEF,cAAC9L,EAAD,OCiBSiM,OAvBf,WACE,OACE,qCACE,cAACrN,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOsN,OAAK,EAACC,KAAK,IAAIC,UAAWxH,KACjC,cAAC,IAAD,CAAOsH,OAAK,EAACC,KAAK,gBAAgBC,UAAWnL,KAC7C,cAAC,IAAD,CAAOkL,KAAK,eAAeC,UAAWd,KACtC,cAAC,IAAD,CACEY,OAAK,EACLC,KAAK,qCACLC,UAAWrH,KAEb,cAAC,IAAD,CACEoH,KAAK,gCACLC,UAAWT,KAEb,cAAC,IAAD,CAAOQ,KAAK,6BAA6BC,UAAWJ,YCtB5DK,IAASC,OACP,cAAC,IAAD,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.3d890213.chunk.js","sourcesContent":["export const lightPalette = {\n  themePrimary: '#F7F5F3',\n  themeSecondary: '#74592F',\n  themePrimaryFont: '#7E6227',\n  themeSecondaryFont: '#404040'\n};\n\nexport const darkPalette = {\n  themePrimary: '#282B36',\n  themeSecondary: '#9EAAD1',\n  themePrimaryFont: '#9EAAD1',\n  themeSecondaryFont: '#E1E4EB'\n};\n","import {\n  createGlobalStyle,\n  GlobalStyleComponent,\n  DefaultTheme\n} from 'styled-components';\nimport { normalize } from 'polished';\nimport { lightPalette } from './color';\n\nexport const GlobalStyle: GlobalStyleComponent<\n  {},\n  DefaultTheme\n> = createGlobalStyle`\n/* CSS 초기화 */\n${normalize()}\nhtml,\nbody,\ndiv,\nspan,\nobject,\niframe,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6,\np,\nblockquote,\npre,\nabbr,\naddress,\ncite,\ncode,\ndel,\ndfn,\nem,\nimg,\nins,\nkbd,\nq,\nsamp,\nsmall,\nstrong,\nsub,\nsup,\nvar,\nb,\ni,\ndl,\ndt,\ndd,\nol,\nul,\nli,\nfieldset,\nform,\nlabel,\nlegend,\ntable,\ncaption,\ntbody,\ntfoot,\nthead,\ntr,\nth,\ntd,\narticle,\naside,\ncanvas,\ndetails,\nfigcaption,\nfigure,\nfooter,\nheader,\nhgroup,\nmenu,\nnav,\nsection,\nsummary,\ntime,\nmark,\naudio,\nvideo,\na,\ninput,\ntextarea,\nli {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  font-size: 100%;\n  vertical-align: baseline;\n  background: transparent;\n  font: inherit;\n\tvertical-align: baseline;\n  text-decoration: none;\n  box-sizing: border-box;\n  list-style: none;\n  letter-spacing: inherit;\n  user-select: none;\n  font-size: 10px;\n    \n  &:not(input) {\n    &:focus {\n    opacity: 1;\n    }\n\n    &:focus:not(:focus-visible) {\n      outline: none;\n      box-shadow: none;\n    }\n  }\n}\n\nhtml {\n  max-width: 600px;\n  margin: 0 auto;\n  background: #aeaeae;\n\n}\n\nbody {\n  font-family: GowunDodum-Regular, 'Nanum Gothic', sans-serif, -apple-system, BlinkMacSystemFont,\n    'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans',\n    'Droid Sans', 'Helvetica Neue';\n  line-height: 1;\n  margin: 0;\n  padding: 0;\n  background: ${lightPalette.themePrimary};\n  z-index: -2;\n  position: relative; \n\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  letter-spacing: 0.1rem;\n  height: 100%;\n  color: ${lightPalette.themeSecondaryFont};\n  max-width: 600px;\n  margin: 0 auto;\n}\n\n/* HTML5 display-role reset for older browsers */\narticle,\naside,\ndetails,\nfigcaption,\nfigure,\nfooter,\nheader,\nhgroup,\nmenu,\nnav,\nsection {\n  display: block;\n  box-sizing: border-box;\n}\n\nnav ul,\nli {\n  list-style: none;\n}\n\na {\n  margin: 0;\n  padding: 0;\n  font-size: 100%;\n  text-decoration: none;\n  vertical-align: baseline;\n  color: ${lightPalette.themeSecondaryFont};\n  background: transparent;\n\n  \n}\n\nimg {\n  vertical-align: top;\n}\n\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n\ninput {\n  margin: 0;\n  padding: 0;\n  box-sizing: content-box;\n  vertical-align: top;\n  appearance: none;\n  border-radius: 0;\n}\ninput::-ms-clear,\ninput::-ms-reveal{\n\tdisplay:none;width:0;height:0;\n}\ninput::-webkit-search-decoration,\ninput::-webkit-search-cancel-button,\ninput::-webkit-search-results-button,\ninput::-webkit-search-results-decoration{\n\tdisplay:none;\n}\n\nsection {\n  min-height: calc(100vh - 40px);\n  position: relative; \n}\n\n/* 웹폰트 CSS */\n@font-face {\n    font-family: 'GowunBatang-Regular';\n    src: url('https://cdn.jsdelivr.net/gh/projectnoonnu/noonfonts_2108@1.1/GowunBatang-Regular.woff') format('woff');\n    font-weight: normal;\n    font-style: normal;\n}\n\n/* 로고 글씨체 */\n@font-face {\n    font-family: 'designhouseOTFLight00';\n    src: url('https://cdn.jsdelivr.net/gh/projectnoonnu/noonfonts_three@1.0/designhouseOTFLight00.woff') format('woff');\n    font-weight: normal;\n    font-style: normal;\n}\n\n/* 웹 애플리케이션 전체 글씨체 */\n@font-face {\n    font-family: 'GowunDodum-Regular';\n    src: url('https://cdn.jsdelivr.net/gh/projectnoonnu/noonfonts_2108@1.1/GowunDodum-Regular.woff') format('woff');\n    font-weight: normal;\n    font-style: normal;\n}\n`;\n","export const fontSizeKit = {\n  small: '1.3rem',\n  medium: '1.6rem',\n  large: '2rem',\n  xLarge: '3rem',\n  xxLarge: '4rem'\n};\n\nexport const fontWeightKit = {\n  normal: '400',\n  bold: '700',\n  extraBold: '800'\n};\n","import styled from 'styled-components';\nimport { GiFeather } from 'react-icons/gi';\nimport { lightPalette } from 'styles';\n\ninterface Props {\n  $color: string;\n}\nexport const PlusIcon = styled(GiFeather)``;\nexport const IconContainer = styled.div<Props>`\n  width: 60px;\n  height: 60px;\n  border-radius: 50%;\n  padding: 17px;\n  box-shadow: 0px 0px 8px ${props => props.$color};\n  background: ${props => props.$color};\n  position: fixed;\n  z-index: 1;\n  bottom: 7%;\n  left: 50%;\n  transform: translateX(-50%);\n\n  ${PlusIcon} {\n    width: 100%;\n    height: 100%;\n    color: ${lightPalette.themePrimary};\n  }\n`;\n","import React, { FC } from 'react';\nimport { Link } from 'react-router-dom';\nimport { IconContainer, PlusIcon } from './styles';\nimport { lightPalette } from 'styles';\n\ninterface Props {\n  moveToPage: string;\n  id?: string;\n}\nconst AddButton: FC<Props> = ({ moveToPage, id = '' }) => {\n  const color =\n    moveToPage === '/postingBook'\n      ? lightPalette.themeSecondaryFont\n      : lightPalette.themePrimaryFont;\n\n  return (\n    <Link\n      to={{\n        pathname: moveToPage,\n        state: {\n          id\n        }\n      }}\n    >\n      <IconContainer $color={color}>\n        <PlusIcon />\n      </IconContainer>\n    </Link>\n  );\n};\n\nexport default AddButton;\n","import styled from 'styled-components';\nimport { lightPalette } from 'styles';\n\nexport const FooterContainer = styled.footer`\n  text-align: center;\n  padding-bottom: 3rem;\n  max-width: 600px;\n\n  p {\n    font-family: GowunBatang-Regular;\n    color: ${lightPalette.themeSecondary};\n    opacity: 0.5;\n  }\n`;\n","import React from 'react';\nimport { FooterContainer } from './styles';\n\nexport default function Footer() {\n  return (\n    <FooterContainer>\n      <p>Copyright &copy; JJH.S.TODAY All rights reserved.</p>\n    </FooterContainer>\n  );\n}\n","import styled from 'styled-components';\nimport { lightPalette } from 'styles';\n\nexport const InnerContainer = styled.div``;\nexport const Divider = styled.div``;\nexport const HeaderContainer = styled.header`\n  position: fixed;\n  top: 0;\n  left: 50%;\n  transform: translateX(-50%);\n  background: ${lightPalette.themePrimary};\n  width: 100vw;\n  z-index: 3;\n  max-width: 600px;\n\n  h2 {\n    display: flex;\n    flex-flow: row;\n    align-items: center;\n    justify-content: center;\n    text-align: center;\n    height: 135px;\n    line-height: 4rem;\n    font-size: 2.5rem;\n    font-family: designhouseOTFLight00;\n    margin: 0 auto;\n    word-break: keep-all;\n    width: 50%;\n  }\n\n  ${Divider} {\n    height: 1px;\n    background-image: linear-gradient(\n      to right,\n      ${lightPalette.themePrimary},\n      ${lightPalette.themeSecondaryFont},\n      ${lightPalette.themePrimary}\n    );\n  }\n`;\n","import React, { FC } from 'react';\nimport { HeaderContainer, Divider } from './styles';\n\ninterface Props {\n  title: string;\n}\n\nconst Header: FC<Props> = ({ title }) => {\n  return (\n    <HeaderContainer>\n      <h2>{title}</h2>\n      <Divider />\n    </HeaderContainer>\n  );\n};\n\nexport default Header;\n","import { gql } from 'graphql-tag';\n\nexport const GET_BOOKS = gql`\n  query GET_BOOKS($cursor: ID) {\n    books(cursor: $cursor) {\n      id\n      title\n      author\n      image\n      sentences {\n        id\n        bookId\n        text\n      }\n    }\n  }\n`;\n\nexport const GET_BOOK = gql`\n  query GET_BOOK($id: ID!) {\n    book(id: $id) {\n      id\n      title\n      author\n      image\n      sentences {\n        id\n        bookId\n        text\n      }\n    }\n  }\n`;\n\nexport const CREATE_BOOK = gql`\n  mutation CREATE_BOOK($title: String!, $author: String!, $image: String) {\n    createBook(title: $title, author: $author, image: $image) {\n      id\n      title\n      author\n      image\n      sentences {\n        id\n        bookId\n        text\n      }\n    }\n  }\n`;\n\nexport const DELETE_BOOK = gql`\n  mutation DELETE_BOOK($id: ID!) {\n    deleteBook(id: $id)\n  }\n`;\n","import { request } from 'graphql-request';\nimport { DocumentNode } from 'graphql/language/ast';\nconst URL =\n  process.env.NODE_ENV === 'production'\n    ? 'http://52.14.101.121/graphql'\n    : 'http://localhost:8000/graphql';\n\nexport const fetcher = (query: DocumentNode, variables = {}) =>\n  request(URL, query, variables);\n\nexport const QueryKeys = {\n  BOOKS: 'BOOKS',\n  BOOK: 'BOOK',\n  SENTENCES: 'SENTENCES',\n  SENTENCE: 'SENTENCE'\n};\n","import styled from 'styled-components';\n\nexport const Li = styled.li`\n  width: 25%;\n  height: 120px;\n  margin: 0 1rem;\n  margin-bottom: 7rem;\n  display: flex;\n  justify-content: center;\n\n  &:nth-child(3n + 1) {\n    position: relative;\n\n    &::after {\n      content: '';\n      width: 100vw;\n      height: 2px;\n      display: block;\n      position: absolute;\n      bottom: -0.2rem;\n      left: -10px;\n      z-index: 1;\n      background: gray;\n      box-shadow: 0px 3px 5px black;\n      opacity: 0.7;\n    }\n  }\n\n  img {\n    width: 80px;\n    height: 100%;\n    box-shadow: 2px 2px 5px gray;\n  }\n`;\n","import React, { FC } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Li } from './styles';\n\nexport interface BookProps {\n  book: {\n    id: string;\n    title: string;\n    author: string;\n    image: string;\n    sentences?: Array<{ id: string; bookId: string; text: string }>;\n  };\n}\nconst Book: FC<BookProps> = ({ book }) => {\n  const trimTitle = (title: string) => {\n    const trimedTitle = title.replace(/\\s+/g, '');\n    return trimedTitle;\n  };\n\n  return (\n    <Li>\n      <Link\n        to={{\n          pathname: `/book/${trimTitle(book.title)}`,\n          state: {\n            id: '',\n            bookId: book.id,\n            text: '',\n            title: book.title.trim(),\n            trimedBookId: trimTitle(book.title)\n          }\n        }}\n      >\n        <img src={book.image} alt={book.title} />\n      </Link>\n    </Li>\n  );\n};\n\nexport default Book;\n","import styled from 'styled-components';\n\nexport const Ul = styled.ul`\n  margin: 0 8%;\n  padding-top: 20rem;\n  display: flex;\n  flex-flow: row wrap;\n  justify-content: space-between;\n  overflow: hidden;\n`;\n","import styled from 'styled-components';\nimport { fontSizeKit, lightPalette } from 'styles';\nimport { FaBook } from 'react-icons/fa';\nimport { ImHeart } from 'react-icons/im';\n\nexport const BookIcon = styled(FaBook)``;\nexport const HeartIcon = styled(ImHeart)``;\nexport const Span = styled.span`\n  font-size: ${fontSizeKit.small};\n  color: ${lightPalette.themePrimaryFont};\n  display: flex;\n  flex-flow: row nowrap;\n  align-items: center;\n  justify-content: start;\n  position: absolute;\n  top: 160px;\n  left: 8%;\n\n  ${BookIcon}, ${HeartIcon} {\n    color: ${lightPalette.themePrimaryFont};\n    margin-right: 0.6rem;\n  }\n`;\n","import React, { FC } from 'react';\nimport { BookIcon, HeartIcon, Span } from './styles';\n\ninterface Props {\n  count: number;\n  title: string;\n}\n\nconst MyCount: FC<Props> = ({ count = 0, title }) => {\n  return (\n    <Span>\n      {title === '나의 책장' ? <BookIcon /> : <HeartIcon />}\n      {title} &#40;{count}&#41;\n    </Span>\n  );\n};\n\nexport default MyCount;\n","import {\n  MutableRefObject,\n  useCallback,\n  useEffect,\n  useRef,\n  useState\n} from 'react';\n\nconst useInfiniteScroll = (\n  targetEl: MutableRefObject<HTMLDivElement | null>\n) => {\n  const observerRef = useRef<IntersectionObserver | null>(null);\n  const [intersecting, setIntersecting] = useState(false);\n\n  const getObserver = useCallback(() => {\n    if (!observerRef.current) {\n      observerRef.current = new IntersectionObserver(entries => {\n        setIntersecting(entries.some(entry => entry.isIntersecting));\n      });\n    }\n    return observerRef.current;\n  }, [observerRef.current]);\n\n  useEffect(() => {\n    if (targetEl.current) getObserver().observe(targetEl.current);\n\n    return () => {\n      getObserver().disconnect();\n    };\n  }, [targetEl.current]);\n\n  return intersecting;\n};\n\nexport default useInfiniteScroll;\n","import styled from 'styled-components';\nimport { fontSizeKit, lightPalette } from 'styles';\n\nexport const P = styled.p`\n  font-size: ${fontSizeKit.medium};\n  color: ${lightPalette.themePrimaryFont};\n  position: absolute;\n  width: 100%;\n  top: 50%;\n  left: 50%;\n  text-align: center;\n  transform: translate3d(-50%, -50%, 0);\n`;\n","import React, { FC } from 'react';\nimport { P } from './styles';\n\ninterface Props {\n  text: string;\n}\nconst Message: FC<Props> = ({ text }) => {\n  return <P>{text}</P>;\n};\n\nexport default Message;\n","import { GET_BOOKS } from 'graphql/book';\nimport { fetcher } from 'queryClient';\nimport React, { useEffect, useRef, useState } from 'react';\nimport Book from 'components/Book';\nimport { Ul } from './styles';\nimport MyCount from 'components/MyCount';\nimport useInfiniteScroll from 'hooks/useInfiniteScroll';\nimport Message from 'components/Message';\n\ninterface Books {\n  id: string;\n  title: string;\n  author: string;\n  image: string;\n  sentences?: Array<{ id: string; bookId: string; text: string }>;\n}\nexport default function BookListContainer() {\n  const [books, setBooks] = useState<Books[]>([]);\n  const fetchMoreEl = useRef<HTMLDivElement | null>(null);\n  const intersecting = useInfiniteScroll(fetchMoreEl);\n  const [hasNext, setHasNext] = useState(true);\n  const [booksLength, setBooksLength] = useState(0);\n\n  const getServerSideData = async () => {\n    const { books: sBooks } = await fetcher(GET_BOOKS, {\n      cursor: books[books.length - 1]?.id\n    });\n    if (sBooks.length === 0) {\n      setHasNext(false);\n      return;\n    }\n    setBooks(old => [...old, ...sBooks]);\n  };\n\n  useEffect(() => {\n    if (intersecting && hasNext) getServerSideData();\n  }, [intersecting, hasNext]);\n\n  const getBooksLength = async () => {\n    const { books: sBooks } = await fetcher(GET_BOOKS, { cursor: 'all' });\n    setBooksLength(sBooks.length);\n  };\n\n  useEffect(() => {\n    getBooksLength();\n  }, []);\n\n  return (\n    <>\n      <MyCount count={booksLength} title='나의 책장' />\n      {books.length > 0 ? (\n        <Ul>\n          {books.map(book => (\n            <Book key={book.id} book={book} />\n          ))}\n        </Ul>\n      ) : (\n        <Message text='나만의 첫 책을 등록해보세요.' />\n      )}\n      <div ref={fetchMoreEl}></div>\n    </>\n  );\n}\n","import AddButton from 'components/AddButton';\nimport Footer from 'components/Footer';\nimport Header from 'components/Header';\nimport BookListContainer from 'containers/BookListContainer';\nimport React from 'react';\n\nexport default function Home() {\n  return (\n    <>\n      <Header title='쓰담쓰담' />\n      <section>\n        <BookListContainer />\n      </section>\n      <AddButton moveToPage='/postingBook' />\n      <Footer />\n    </>\n  );\n}\n","import styled from 'styled-components';\n\nexport const Ul = styled.ul`\n  padding: 20rem 8% 0;\n  display: flex;\n  flex-flow: column wrap;\n`;\n","import styled from 'styled-components';\nimport { fontSizeKit, lightPalette } from 'styles';\nimport { GiPaperClip } from 'react-icons/gi';\n\nexport const ClipIcon = styled(GiPaperClip)``;\nexport const Li = styled.li`\n  border: 1px solid ${lightPalette.themePrimaryFont};\n  margin-bottom: 4rem;\n  position: relative;\n  background: #fff;\n\n  p {\n    font-size: ${fontSizeKit.medium};\n    color: ${lightPalette.themePrimaryFont};\n    line-height: 2.5rem;\n    white-space: pre-wrap;\n    padding: 3rem 2rem;\n  }\n\n  &:after {\n    content: '';\n    position: absolute;\n    bottom: 10px;\n    left: 10%;\n    width: 90%;\n    height: 50px;\n    background: rgba(0, 0, 0, 0.3);\n    transform: skewY(5deg);\n    transform-origin: left;\n    z-index: -1;\n    filter: blur(2px);\n  }\n\n  ${ClipIcon} {\n    position: absolute;\n    top: -12px;\n    z-index: 2;\n    left: 0px;\n    width: 33px;\n    height: 33px;\n    color: ${lightPalette.themePrimaryFont};\n    transform: rotate(-45deg);\n  }\n`;\n","import React, { FC } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Li, ClipIcon } from './styles';\n\ninterface Props {\n  text: string;\n  id: string;\n  bookId: string;\n  trimedBookId: string;\n  title: string;\n}\nconst Sentence: FC<Props> = ({ text, id, bookId, trimedBookId, title }) => {\n  return (\n    <Li>\n      <Link\n        to={{\n          pathname: `/book/${trimedBookId}/sentence/${id}`,\n          state: { text, id, bookId, title, trimedBookId }\n        }}\n      >\n        <ClipIcon />\n        <div>\n          <p>{text}</p>\n        </div>\n      </Link>\n    </Li>\n  );\n};\n\nexport default Sentence;\n","import { gql } from 'graphql-tag';\n\nexport const GET_SENTENCES = gql`\n  query GET_SENTENCES($bookId: ID!, $cursor: ID) {\n    sentences(bookId: $bookId, cursor: $cursor) {\n      id\n      bookId\n      text\n    }\n  }\n`;\n\nexport const GET_SENTENCE = gql`\n  query GET_SENTENCE($id: ID!) {\n    sentence(id: $id) {\n      id\n      bookId\n      text\n    }\n  }\n`;\n\nexport const CREATE_SENTENCE = gql`\n  mutation CREATE_SENTENCE($text: String!, $bookId: ID!) {\n    createSentence(text: $text, bookId: $bookId) {\n      id\n      bookId\n      text\n    }\n  }\n`;\n\nexport const UPDATE_SENTENCE = gql`\n  mutation UPDATE_SENTENCE($id: ID!, $text: String!) {\n    updateSentence(id: $id, text: $text) {\n      id\n      bookId\n      text\n    }\n  }\n`;\n\nexport const DELETE_SENTENCE = gql`\n  mutation DELETE_SENTENCE($id: ID!) {\n    deleteSentence(id: $id)\n  }\n`;\n","import styled from 'styled-components';\nimport { IoCloseOutline } from 'react-icons/io5';\nimport { lightPalette } from 'styles';\n\nexport const CloseIcon = styled(IoCloseOutline)``;\nexport const Button = styled.button`\n  width: 40px;\n  height: 40px;\n  background: transparent;\n  border: none;\n  position: fixed;\n  top: 47px;\n  z-index: 3;\n  left: 8%;\n  cursor: pointer;\n\n  ${CloseIcon} {\n    width: 100%;\n    height: 100%;\n    color: ${lightPalette.themeSecondaryFont};\n  }\n`;\n","import React from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { CloseIcon, Button } from './styles';\n\ninterface StateTypes {\n  pathname: string;\n  trimedBookId: string;\n}\nexport default function CloseButton() {\n  const history = useHistory();\n  const location = useLocation<StateTypes>();\n  const { pathname, state } = location;\n\n  const onClick = () => {\n    if (\n      pathname.includes('book') &&\n      !pathname.includes('postingSentence') &&\n      !pathname.includes('sentence') &&\n      !pathname.includes('editSentence')\n    ) {\n      history.push('/');\n    } else if (pathname.includes('sentence'))\n      history.push({ pathname: `/book/${state.trimedBookId}`, state });\n    else history.goBack();\n  };\n\n  return (\n    <Button onClick={onClick}>\n      <CloseIcon />\n    </Button>\n  );\n}\n","import styled from 'styled-components';\nimport { FiCheck } from 'react-icons/fi';\nimport { lightPalette } from 'styles';\n\ninterface Props {\n  $readyToSubmit: boolean;\n}\nexport const ConfirmIcon = styled(FiCheck)``;\nexport const Button = styled.button<Props>`\n  width: 40px;\n  height: 40px;\n  background: transparent;\n  border: none;\n  position: fixed;\n  top: 47px;\n  z-index: 3;\n  right: 8%;\n  cursor: ${props => (props.$readyToSubmit ? 'pointer' : 'not-allowed;')};\n\n  ${ConfirmIcon} {\n    width: 100%;\n    height: 100%;\n    color: ${lightPalette.themeSecondaryFont};\n    opacity: ${props => (props.$readyToSubmit ? '1' : '0.2')};\n  }\n`;\n","import React, { FC, MouseEventHandler } from 'react';\nimport { Button, ConfirmIcon } from './styles';\n\ninterface Props {\n  onSubmit: MouseEventHandler<HTMLButtonElement>;\n  readyToSubmit: boolean;\n}\nconst ConfirmButton: FC<Props> = ({ onSubmit, readyToSubmit }) => {\n  return (\n    <Button onClick={onSubmit} $readyToSubmit={readyToSubmit}>\n      <ConfirmIcon />\n    </Button>\n  );\n};\n\nexport default ConfirmButton;\n","import styled from 'styled-components';\nimport { fontSizeKit, fontWeightKit, lightPalette } from 'styles';\n\nexport const Container = styled.div`\n  width: 100%;\n  height: 100vh;\n  background: rgba(0, 0, 0, 0.4);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: fixed;\n  z-index: 5;\n\n  div {\n    background: ${lightPalette.themePrimary};\n    padding-top: 4rem;\n    padding-bottom: 3rem;\n    width: 85%;\n    display: flex;\n    flex-flow: column;\n    justify-content: center;\n    align-items: center;\n    border-radius: 10px;\n    box-shadow: 2px 2px 5px rgba(0, 0, 0, 0.2);\n\n    p {\n      font-size: ${fontSizeKit.medium};\n      font-weight: ${fontWeightKit.bold};\n      margin-bottom: 1rem;\n      color: ${lightPalette.themeSecondary};\n    }\n\n    span {\n      font-size: ${fontSizeKit.small};\n      margin-bottom: 3rem;\n      opacity: 0.7;\n    }\n\n    div {\n      flex-flow: row;\n      padding: 0;\n      justify-content: space-around;\n      width: 70%;\n      box-shadow: none;\n\n      button {\n        width: 50%;\n        padding: 1rem;\n        font-size: ${fontSizeKit.medium};\n        border-radius: 10px;\n        border: 1px solid ${lightPalette.themeSecondary};\n        background: transparent;\n        color: ${lightPalette.themeSecondary};\n        cursor: pointer;\n\n        &:last-child {\n          margin-left: 1rem;\n        }\n      }\n    }\n  }\n`;\n","import React, { FC } from 'react';\nimport { Container } from './styles';\n\ninterface Props {\n  id: string;\n  onDeleteCancel: () => void;\n  onDeleteConfirm: (id: string) => void;\n}\n\nconst DeleteConfirmModal: FC<Props> = ({\n  onDeleteCancel,\n  onDeleteConfirm,\n  id\n}) => {\n  return (\n    <Container>\n      <div>\n        <p>책을 삭제하시겠습니까?</p>\n        <span>기록된 문장은 일괄 삭제됩니다.</span>\n        <div>\n          <button onClick={onDeleteCancel}>취소</button>\n          <button onClick={() => onDeleteConfirm(id)}>확인</button>\n        </div>\n      </div>\n    </Container>\n  );\n};\n\nexport default DeleteConfirmModal;\n","import styled from 'styled-components';\nimport { AiOutlineDelete } from 'react-icons/ai';\nimport { lightPalette } from 'styles';\n\nexport const DeleteBookIcon = styled(AiOutlineDelete)``;\nexport const Button = styled.button`\n  width: 40px;\n  height: 40px;\n  background: transparent;\n  border: none;\n  position: fixed;\n  top: 47px;\n  z-index: 3;\n  right: 8%;\n  cursor: pointer;\n\n  ${DeleteBookIcon} {\n    width: 100%;\n    height: 100%;\n    color: ${lightPalette.themeSecondaryFont};\n  }\n`;\n","import DeleteConfirmModal from 'components/DeleteConfirmModal';\nimport React, { FC } from 'react';\nimport { Button, DeleteBookIcon } from './styles';\n\ninterface Props {\n  id: string;\n  onClick: (id: string) => void;\n  isModal?: boolean;\n  onDeleteCancel?: () => void;\n  onDeleteConfirm?: (id: string) => void;\n}\n\nconst DeleteButton: FC<Props> = ({\n  id,\n  onClick,\n  isModal = false,\n  onDeleteCancel = () => {},\n  onDeleteConfirm = () => {}\n}) => {\n  return (\n    <>\n      <Button onClick={() => onClick(id)}>\n        <DeleteBookIcon />\n      </Button>\n      {isModal && (\n        <DeleteConfirmModal\n          onDeleteCancel={onDeleteCancel}\n          onDeleteConfirm={onDeleteConfirm}\n          id={id}\n        />\n      )}\n    </>\n  );\n};\n\nexport default DeleteButton;\n","import styled from 'styled-components';\nimport { HiOutlinePencilAlt } from 'react-icons/hi';\nimport { lightPalette } from 'styles';\n\nexport const UpdateIcon = styled(HiOutlinePencilAlt)``;\nexport const Button = styled.button`\n  width: 40px;\n  height: 40px;\n  background: transparent;\n  border: none;\n  position: fixed;\n  top: 47px;\n  z-index: 3;\n  right: 20%;\n  cursor: pointer;\n\n  ${UpdateIcon} {\n    width: 100%;\n    height: 100%;\n    color: ${lightPalette.themeSecondaryFont};\n  }\n`;\n","import React, { FC, MouseEventHandler } from 'react';\nimport { Button, UpdateIcon } from './styles';\n\ninterface Props {\n  id: string;\n  text: string;\n  trimedBookId: string;\n  onUpdate: (id: string, text: string, trimedBookId: string) => void;\n}\nconst UpdateButton: FC<Props> = ({ id, text, trimedBookId, onUpdate }) => {\n  return (\n    <Button onClick={() => onUpdate(id, text, trimedBookId)}>\n      <UpdateIcon />\n    </Button>\n  );\n};\n\nexport default UpdateButton;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  position: fixed;\n  top: 0;\n  left: 50%;\n  transform: translateX(-50%);\n  width: 100vw;\n  z-index: 3;\n  max-width: 600px;\n`;\n","import CloseButton from 'components/CloseButton';\nimport ConfirmButton from 'components/ConfirmButton';\nimport DeleteButton from 'components/DeleteButton';\nimport UpdateButton from 'components/UpdateButton';\nimport React, { FC, MouseEventHandler } from 'react';\nimport { Container } from './styles';\n\ninterface Props {\n  pageName: string;\n  onSubmit?: MouseEventHandler<HTMLButtonElement>;\n  onClick?: (id: string) => void;\n  id?: string;\n  readyToSubmit?: boolean;\n  text?: string;\n  trimedBookId?: string;\n  onUpdate?: (id: string, text: string, trimedBookId: string) => void;\n  isModal?: boolean;\n  onDeleteCancel?: () => void;\n  onDeleteConfirm?: (id: string) => void;\n}\n\nconst ButtonsContainer: FC<Props> = ({\n  pageName,\n  id = '',\n  onClick = () => {},\n  readyToSubmit = false,\n  text = '',\n  trimedBookId = '',\n  onUpdate = () => {},\n  onSubmit = () => {},\n  isModal = false,\n  onDeleteCancel = () => {},\n  onDeleteConfirm = () => {}\n}) => {\n  return (\n    <Container>\n      <CloseButton />\n      {pageName === 'needToContirm' && (\n        <ConfirmButton onSubmit={onSubmit} readyToSubmit={readyToSubmit} />\n      )}\n      {pageName === 'needToDelete' && (\n        <DeleteButton\n          id={id}\n          onClick={onClick}\n          isModal={isModal}\n          onDeleteCancel={onDeleteCancel}\n          onDeleteConfirm={onDeleteConfirm}\n        />\n      )}\n      {pageName === 'needToUpdate' && (\n        <>\n          <UpdateButton\n            id={id}\n            text={text}\n            trimedBookId={trimedBookId}\n            onUpdate={onUpdate}\n          />\n          <DeleteButton id={id} onClick={onClick} />\n        </>\n      )}\n    </Container>\n  );\n};\n\nexport default ButtonsContainer;\n","import React, { FC, useEffect, useRef, useState } from 'react';\nimport { Ul } from './styles';\nimport { DELETE_BOOK } from 'graphql/book';\nimport { fetcher } from 'queryClient';\nimport { useHistory } from 'react-router-dom';\nimport Sentence from 'components/Sentence';\nimport { GET_SENTENCES } from 'graphql/sentence';\nimport MyCount from 'components/MyCount';\nimport ButtonsContainer from 'containers/ButtonsContainer';\nimport Message from 'components/Message';\nimport useInfiniteScroll from 'hooks/useInfiniteScroll';\n\ninterface Props {\n  bookId: string;\n  trimedBookId: string;\n  title: string;\n}\n\ninterface Sentences {\n  id: string;\n  text: string;\n  bookId: string;\n}\n\nconst SentenceListContainer: FC<Props> = ({ bookId, trimedBookId, title }) => {\n  const history = useHistory();\n  const [stcs, setStcs] = useState<Sentences[]>([]);\n  const fetchMoreEl = useRef<HTMLDivElement | null>(null);\n  const intersecting = useInfiniteScroll(fetchMoreEl);\n  const [hasNext, setHasNext] = useState(true);\n  const [booksLength, setBooksLength] = useState(0);\n  const [isModal, setIsModal] = useState(false);\n\n  const getServerSideData = async () => {\n    const { sentences: sStcs } = await fetcher(GET_SENTENCES, {\n      bookId,\n      cursor: stcs[stcs.length - 1]?.id\n    });\n    if (sStcs.length === 0) {\n      setHasNext(false);\n      return;\n    }\n    setStcs(old => [...old, ...sStcs]);\n  };\n\n  useEffect(() => {\n    if (intersecting && hasNext) getServerSideData();\n  }, [intersecting, hasNext]);\n\n  const getStcsLength = async () => {\n    const { sentences: sStcs } = await fetcher(GET_SENTENCES, {\n      bookId,\n      cursor: 'all'\n    });\n    setBooksLength(sStcs.length);\n  };\n\n  useEffect(() => {\n    getStcsLength();\n  }, []);\n\n  const onClick = async (bookId: string) => {\n    setIsModal(true);\n  };\n\n  const onDeleteCancel = () => {\n    setIsModal(false);\n  };\n\n  const onDeleteConfirm = async (bookId: string) => {\n    await fetcher(DELETE_BOOK, { id: bookId });\n    history.push('/');\n  };\n\n  return (\n    <>\n      <ButtonsContainer\n        pageName='needToDelete'\n        id={bookId}\n        onClick={onClick}\n        isModal={isModal}\n        onDeleteCancel={onDeleteCancel}\n        onDeleteConfirm={onDeleteConfirm}\n      />\n      <MyCount count={booksLength} title='나의 기록' />\n      {stcs.length > 0 ? (\n        <Ul>\n          {stcs.map(stc => (\n            <Sentence\n              key={stc.id}\n              text={stc.text}\n              id={stc.id}\n              bookId={bookId}\n              trimedBookId={trimedBookId}\n              title={title}\n            />\n          ))}\n        </Ul>\n      ) : (\n        <Message text='나만의 첫 문장을 기록해보세요.' />\n      )}\n      <div ref={fetchMoreEl}></div>\n    </>\n  );\n};\n\nexport default SentenceListContainer;\n","import AddButton from 'components/AddButton';\nimport Footer from 'components/Footer';\nimport Header from 'components/Header';\nimport SentenceListContainer from 'containers/SentenceListContainer';\nimport React, { useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { StateType } from 'pages/Sentence';\n\nconst Book = () => {\n  const { state } = useLocation<StateType>();\n  const { bookId, title, trimedBookId } = state;\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, []);\n\n  return (\n    <>\n      <Header title={title} />\n      <section>\n        <SentenceListContainer\n          bookId={bookId}\n          trimedBookId={trimedBookId}\n          title={title}\n        />\n      </section>\n      <AddButton\n        moveToPage={`/book/${trimedBookId}/postingSentence`}\n        id={bookId}\n      />\n      <Footer />\n    </>\n  );\n};\n\nexport default Book;\n","import axios from 'axios';\n\nconst URL =\n  process.env.NODE_ENV === 'production'\n    ? 'http://52.14.101.121/'\n    : 'http://localhost:8000/';\n\nexport const getSearchBook = async (title: string) => {\n  try {\n    const res = await axios.get(URL, {\n      params: title\n    });\n    return res.data.items;\n  } catch (err) {\n    console.error(err);\n  }\n};\n","import styled from 'styled-components';\nimport { IoMdRadioButtonOff, IoMdRadioButtonOn } from 'react-icons/io';\nimport { lightPalette } from 'styles';\n\nexport const OffRadioIcon = styled(IoMdRadioButtonOff)`\n  width: 20px;\n  height: 20px;\n  color: ${lightPalette.themeSecondary};\n  opacity: 0.4;\n  flex-shrink: 0;\n  cursor: pointer;\n`;\nexport const OnRadioIcon = styled(IoMdRadioButtonOn)`\n  width: 20px;\n  height: 20px;\n  color: ${lightPalette.themeSecondary};\n  opacity: 0.6;\n  flex-shrink: 0;\n  cursor: pointer;\n`;\n","import React, { FC } from 'react';\nimport { OffRadioIcon, OnRadioIcon } from './styles';\n\ninterface Props {\n  id: string;\n  title: string;\n  author: string;\n  image: string;\n  isChecked: boolean;\n  onClick: (id: string) => void;\n}\n\nconst SearchedBook: FC<Props> = ({\n  id,\n  title,\n  author,\n  image,\n  isChecked,\n  onClick\n}) => {\n  if (!id || !title || !author || !image) return null;\n\n  return (\n    <li key={id} id={id} onClick={() => onClick(id)}>\n      <img src={image} alt={title} />\n      <div>\n        <span>책 제목</span>\n        <p>{title}</p>\n        <span>지은이</span>\n        <p>{author}</p>\n      </div>\n      {isChecked ? <OnRadioIcon /> : <OffRadioIcon />}\n    </li>\n  );\n};\n\nexport default SearchedBook;\n","import styled from 'styled-components';\nimport { fontSizeKit } from 'styles';\n\nexport const Ul = styled.ul`\n  margin-top: 5rem;\n\n  li {\n    display: flex;\n    flex-flow: row nowrap;\n    padding: 3rem 0;\n    border-bottom: 1px solid rgba(116, 89, 47, 0.2);\n    overflow: hidden;\n    align-items: center;\n    justify-content: space-between;\n    width: 100%;\n\n    &:first-child {\n      border-top: 1px solid rgba(116, 89, 47, 0.2);\n    }\n\n    img {\n      width: 80px;\n      height: 120px;\n    }\n\n    div {\n      display: flex;\n      flex-flow: column;\n      margin-left: 2rem;\n      justify-content: center;\n      min-width: 230px;\n      flex-grow: 1;\n\n      span {\n        font-size: ${fontSizeKit.small};\n        opacity: 0.5;\n        margin-bottom: 0.8rem;\n      }\n\n      p {\n        display: block;\n        width: 95%;\n        font-size: ${fontSizeKit.medium};\n        white-space: nowrap;\n        overflow: hidden;\n        text-overflow: ellipsis;\n\n        & + span {\n          margin-top: 1.8rem;\n        }\n      }\n    }\n  }\n`;\n","import Message from 'components/Message';\nimport SearchedBook from 'components/SearchedBook';\nimport React, { FC } from 'react';\nimport { Ul } from './styles';\n\ninterface Props {\n  searchedBook: Array<{\n    id: string;\n    title: string;\n    author: string;\n    image: string;\n    isChecked: boolean;\n  }>;\n  onClick: (id: string) => void;\n  isFail: boolean;\n}\n\nconst SearchedBookList: FC<Props> = ({ searchedBook, onClick, isFail }) => {\n  if (isFail) return <Message text='검색한 책이 존재하지 않습니다...' />;\n  return (\n    <Ul>\n      {searchedBook.map(({ id, title, author, image, isChecked }) => (\n        <SearchedBook\n          key={id}\n          id={id}\n          title={title}\n          author={author}\n          image={image}\n          isChecked={isChecked}\n          onClick={onClick}\n        />\n      ))}\n    </Ul>\n  );\n};\n\nexport default SearchedBookList;\n","import styled from 'styled-components';\nimport { fontSizeKit, lightPalette } from 'styles';\nimport { IoCloseCircle } from 'react-icons/io5';\n\ninterface Props {\n  $text: number;\n}\n\nexport const DeleteIcon = styled(IoCloseCircle)``;\nexport const Container = styled.div<Props>`\n  position: relative;\n\n  input {\n    width: 100%;\n    padding: 2rem 5rem 2rem 2rem;\n    box-sizing: border-box;\n    background: #fff;\n    font-size: ${fontSizeKit.medium};\n    box-shadow: 0 5px 20px rgba(50, 50, 50, 0.1),\n      0 2px 2px rgba(50, 50, 50, 0.1);\n    border-radius: 5px;\n    outline: none;\n  }\n\n  ${DeleteIcon} {\n    width: 25px;\n    height: 25px;\n    color: ${lightPalette.themeSecondaryFont};\n    position: absolute;\n    top: 50%;\n    transform: translateY(-50%);\n    right: 1.5rem;\n    opacity: ${props => (props.$text > 0 ? '0.7' : '0')};\n    cursor: pointer;\n  }\n`;\n","import React, {\n  ChangeEventHandler,\n  FC,\n  useState,\n  KeyboardEvent,\n  useRef\n} from 'react';\nimport { DeleteIcon, Container } from './styles';\n\ninterface Props {\n  onKeyPress: (e: KeyboardEvent<HTMLInputElement>) => void;\n}\n\nconst SearchInput: FC<Props> = ({ onKeyPress }) => {\n  const [text, setText] = useState('');\n  const inputEl = useRef<HTMLInputElement>(null);\n\n  const onChange: ChangeEventHandler<HTMLInputElement> = e => {\n    setText(e.target.value);\n  };\n\n  const onClick = () => {\n    setText('');\n    if (inputEl.current) {\n      inputEl.current.focus();\n    }\n  };\n\n  return (\n    <Container $text={text.length}>\n      <input\n        type='search'\n        placeholder='어떤 책을 읽으셨나요?'\n        value={text}\n        onChange={onChange}\n        onKeyPress={onKeyPress}\n        ref={inputEl}\n        autoFocus\n      />\n      <DeleteIcon onClick={onClick} />\n    </Container>\n  );\n};\n\nexport default SearchInput;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  margin-bottom: 7rem;\n  padding: 20rem 8% 0;\n`;\n","import { getSearchBook } from 'api/bookApi';\nimport SearchedBookList from 'components/SearchedBookList';\nimport SearchInput from 'components/SearchInput';\nimport { fetcher } from 'queryClient';\nimport React, {\n  MouseEventHandler,\n  KeyboardEventHandler,\n  useState\n} from 'react';\nimport { Container } from './styles';\nimport { CREATE_BOOK } from 'graphql/book';\nimport { useHistory } from 'react-router-dom';\nimport ButtonsContainer from 'containers/ButtonsContainer';\n\ninterface SearchedBook {\n  author: string;\n  image: string;\n  isbn: string;\n  title: string;\n  description?: string;\n  discount?: string;\n  link?: string;\n  price?: string;\n  pubdate?: string;\n  publisher?: string;\n}\n\nconst trimedText = (text: string) => {\n  let newText = '';\n  let copyTitle = text.split('');\n  let isText = true;\n  let isLparen = false;\n\n  for (let i = 0; i < copyTitle.length; i++) {\n    if (copyTitle[i] === '<') isText = false;\n    if (copyTitle[i] === '(') isLparen = true;\n    if (isText && !isLparen) newText += copyTitle[i];\n    if (copyTitle[i] === '>') isText = true;\n    if (copyTitle[i] === ')') isLparen = false;\n  }\n  return newText;\n};\n\nexport default function SearchingBookContainer() {\n  const [searchedBook, setSearchedBook] = useState([\n    { id: '', title: '', author: '', image: '', isChecked: false }\n  ]);\n  const [isFail, setIsFail] = useState(false);\n  const [selectedBook, setSelectedBook] = useState({\n    id: '',\n    title: '',\n    author: '',\n    image: ''\n  });\n  const history = useHistory();\n\n  const onKeyPress: KeyboardEventHandler<HTMLInputElement> = async e => {\n    const element = e.currentTarget as HTMLInputElement;\n    const value = element.value;\n\n    if (e.key !== 'Enter' || !value.trim()) return null;\n    const res = await getSearchBook(value);\n    const newRes = res.map((res: SearchedBook) => {\n      return {\n        id: res.isbn,\n        title: trimedText(res.title),\n        author: trimedText(res.author),\n        image: res.image,\n        isChecked: false\n      };\n    });\n    setSearchedBook(newRes);\n    newRes.length ? setIsFail(false) : setIsFail(true);\n  };\n\n  const onClick = (id: string) => {\n    const newData = searchedBook.map(old =>\n      old.id === id\n        ? { ...old, isChecked: !old.isChecked }\n        : { ...old, isChecked: false }\n    );\n    setSearchedBook(newData);\n\n    const newSelectedBook = newData.filter(book => book.id === id);\n    getSelectedBook(newSelectedBook);\n  };\n\n  const getSelectedBook = (\n    newSelectedBook: Array<{\n      id: string;\n      title: string;\n      author: string;\n      image: string;\n    }>\n  ) => {\n    const { id, title, author, image } = newSelectedBook[0];\n    if (selectedBook.id === id)\n      setSelectedBook({ id: '', title: '', author: '', image: '' });\n    else setSelectedBook({ id, title, author, image });\n  };\n\n  const onSubmit: MouseEventHandler<HTMLButtonElement> = async () => {\n    if (!selectedBook.id) return null;\n    const { title, author, image } = selectedBook;\n    await fetcher(CREATE_BOOK, { title, author, image });\n    history.push('/');\n  };\n\n  return (\n    <>\n      <ButtonsContainer\n        pageName='needToContirm'\n        onSubmit={onSubmit}\n        readyToSubmit={!!selectedBook.id}\n      />\n      <Container>\n        <SearchInput onKeyPress={onKeyPress} />\n        <SearchedBookList\n          searchedBook={searchedBook}\n          onClick={onClick}\n          isFail={isFail}\n        />\n      </Container>\n    </>\n  );\n}\n","import Footer from 'components/Footer';\nimport Header from 'components/Header';\nimport SearchingBookContainer from 'containers/SearchingBookContainer';\nimport React, { useEffect } from 'react';\n\nexport default function PostingBook() {\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, []);\n\n  return (\n    <>\n      <Header title='책 등록' />\n      <section>\n        <SearchingBookContainer />\n      </section>\n      <Footer />\n    </>\n  );\n}\n","import styled from 'styled-components';\nimport { fontSizeKit } from 'styles';\n\nexport const Textarea = styled.textarea`\n  margin-top: 20rem;\n  padding: 0 8%;\n  margin-bottom: 8%;\n  outline: none;\n  resize: none;\n  width: 100%;\n  min-height: 60vh;\n  font-size: ${fontSizeKit.medium};\n  line-height: 3rem;\n  opacity: 0.7;\n  /* text-align: start; */\n  /* text-align: center; */\n  /* text-align: end; */\n`;\n","import React, { ChangeEventHandler, FC } from 'react';\nimport { Textarea } from './styles';\n\ninterface Props {\n  text: string;\n  onChange: ChangeEventHandler<HTMLTextAreaElement>;\n}\nconst SentenceTextarea: FC<Props> = ({ text, onChange }) => {\n  return <Textarea autoFocus value={text} onChange={onChange}></Textarea>;\n};\n\nexport default SentenceTextarea;\n","import SentenceTextarea from 'components/SentenceTextarea';\nimport ButtonsContainer from 'containers/ButtonsContainer';\nimport { CREATE_SENTENCE } from 'graphql/sentence';\nimport { fetcher } from 'queryClient';\nimport React, { ChangeEventHandler, FC, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\n\ninterface Props {\n  id: string;\n}\nconst CreateSentenceContainer: FC<Props> = ({ id }) => {\n  const [text, setText] = useState('');\n  const history = useHistory();\n\n  const onSubmit = async () => {\n    if (!text.trim()) return null;\n    const trimedText = text.trim();\n    await fetcher(CREATE_SENTENCE, { text: trimedText, bookId: id });\n    history.goBack();\n  };\n\n  const onChange: ChangeEventHandler<HTMLTextAreaElement> = e => {\n    setText(e.target.value);\n  };\n  return (\n    <>\n      <ButtonsContainer\n        pageName='needToContirm'\n        onSubmit={onSubmit}\n        readyToSubmit={!!text.trim()}\n      />\n      <SentenceTextarea text={text} onChange={onChange} />\n    </>\n  );\n};\n\nexport default CreateSentenceContainer;\n","import Footer from 'components/Footer';\nimport Header from 'components/Header';\nimport CreateSentenceContainer from 'containers/CreateSentenceContainer';\nimport { StateType } from 'pages/Sentence';\nimport React, { useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\n\nexport default function PostingSentence() {\n  const { state } = useLocation<StateType>();\n  const id = state.id;\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, []);\n\n  return (\n    <>\n      <Header title='책 문장 기록' />\n      <section>\n        <CreateSentenceContainer id={id} />\n      </section>\n      <Footer />\n    </>\n  );\n}\n","import styled from 'styled-components';\nimport { fontSizeKit, lightPalette } from 'styles';\n\nexport const Container = styled.div`\n  min-height: 100vh;\n  display: flex;\n  flex-flow: column;\n  align-items: center;\n  justify-content: center;\n  padding: 8rem 8% 0;\n\n  p {\n    font-size: ${fontSizeKit.medium};\n    line-height: 3rem;\n    white-space: pre-wrap;\n    color: ${lightPalette.themePrimaryFont};\n  }\n\n  span {\n    font-size: ${fontSizeKit.small};\n    opacity: 0.7;\n    font-style: italic;\n    margin-top: 7rem;\n    margin-bottom: 10rem;\n  }\n`;\n","import React, { FC } from 'react';\nimport { Container } from './styles';\n\ninterface Props {\n  title: string;\n  text: string;\n}\nconst SentenceDetail: FC<Props> = ({ title, text }) => {\n  return (\n    <Container>\n      <p>{text}</p>\n      <span>- {title} -</span>\n    </Container>\n  );\n};\n\nexport default SentenceDetail;\n","import SentenceDetail from 'components/SentenceDetail';\nimport ButtonsContainer from 'containers/ButtonsContainer';\nimport { DELETE_SENTENCE } from 'graphql/sentence';\nimport { fetcher } from 'queryClient';\nimport React, { FC } from 'react';\nimport { useHistory } from 'react-router-dom';\n\ninterface Props {\n  id: string;\n  bookId: string;\n  text: string;\n  title: string;\n  trimedBookId: string;\n}\n\nconst SentenceDetailContainer: FC<Props> = ({\n  id,\n  bookId,\n  text,\n  title,\n  trimedBookId\n}) => {\n  const history = useHistory();\n\n  const onClick = async (id: string) => {\n    await fetcher(DELETE_SENTENCE, { id });\n    history.push({\n      pathname: `/book/${trimedBookId}`,\n      state: {\n        id,\n        bookId,\n        text,\n        title,\n        trimedBookId\n      }\n    });\n  };\n\n  const onUpdate = async (id: string, text: string, trimedBookId: string) => {\n    history.push({\n      pathname: `/book/${trimedBookId}/editSentence`,\n      state: {\n        id,\n        bookId,\n        text,\n        title,\n        trimedBookId\n      }\n    });\n  };\n\n  return (\n    <>\n      <ButtonsContainer\n        pageName='needToUpdate'\n        id={id}\n        text={text}\n        trimedBookId={trimedBookId}\n        onUpdate={onUpdate}\n        onClick={onClick}\n      />\n      <SentenceDetail title={title} text={text} />\n    </>\n  );\n};\n\nexport default SentenceDetailContainer;\n","import SentenceDetailContainer from 'containers/SentenceDetailContainer';\nimport React from 'react';\nimport { useLocation } from 'react-router-dom';\n\nexport interface StateType {\n  id: string;\n  bookId: string;\n  text: string;\n  title: string;\n  trimedBookId: string;\n}\nexport default function Sentence() {\n  const { state } = useLocation<StateType>();\n  const { id, bookId, text, title, trimedBookId } = state;\n\n  return (\n    <SentenceDetailContainer\n      id={id}\n      bookId={bookId}\n      text={text}\n      title={title}\n      trimedBookId={trimedBookId}\n    />\n  );\n}\n","import SentenceTextarea from 'components/SentenceTextarea';\nimport ButtonsContainer from 'containers/ButtonsContainer';\nimport { UPDATE_SENTENCE } from 'graphql/sentence';\nimport { fetcher } from 'queryClient';\nimport React, { ChangeEventHandler, useEffect, useState } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\n\ninterface StateTypes {\n  id: string;\n  text: string;\n  trimedBookId: string;\n  bookId: string;\n  title: string;\n}\nexport default function UpdateSentenceContainer() {\n  const [newText, setNewText] = useState('');\n  const { state } = useLocation<StateTypes>();\n  const { id, bookId, text, title, trimedBookId } = state;\n  const history = useHistory();\n\n  const onSubmit = async () => {\n    if (!newText.trim().length) return null;\n    await fetcher(UPDATE_SENTENCE, { id, text: newText });\n    history.push({\n      pathname: `/book/${trimedBookId}/sentence/${id}`,\n      state: { id, bookId, text: newText, title, trimedBookId }\n    });\n  };\n\n  useEffect(() => {\n    setNewText(text);\n  }, []);\n\n  const onChange: ChangeEventHandler<HTMLTextAreaElement> = e => {\n    setNewText(e.target.value);\n  };\n\n  return (\n    <>\n      <ButtonsContainer\n        pageName='needToContirm'\n        onSubmit={onSubmit}\n        readyToSubmit={!!newText.trim().length}\n      />\n\n      <SentenceTextarea text={newText} onChange={onChange} />\n    </>\n  );\n}\n","import Footer from 'components/Footer';\nimport Header from 'components/Header';\nimport UpdateSentenceContainer from 'containers/UpdateSentenceContainer';\nimport React, { useEffect } from 'react';\n\nexport default function EditSentence() {\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, []);\n\n  return (\n    <>\n      <Header title='책 문장 수정' />\n      <section>\n        <UpdateSentenceContainer />\n      </section>\n      <Footer />\n    </>\n  );\n}\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport Home from 'pages/Home';\nimport Book from 'pages/Book';\nimport PostingBook from 'pages/PostingBook';\nimport PostingSentence from 'pages/PostingSentence';\nimport Sentence from 'pages/Sentence';\nimport GlobalStyle from 'styles';\nimport EditSentence from 'pages/EditSentence';\n\nfunction App() {\n  return (\n    <>\n      <GlobalStyle />\n      <Switch>\n        <Route exact path='/' component={Home} />\n        <Route exact path='/book/:bookId' component={Book} />\n        <Route path='/postingBook' component={PostingBook} />\n        <Route\n          exact\n          path='/book/:bookId/sentence/:sentenceId'\n          component={Sentence}\n        />\n        <Route\n          path='/book/:bookId/postingSentence'\n          component={PostingSentence}\n        />\n        <Route path='/book/:bookId/editSentence' component={EditSentence} />\n      </Switch>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './app/App';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}